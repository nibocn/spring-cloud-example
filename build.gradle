plugins {
    id 'org.springframework.boot' version "$VER_SPRING_BOOT" apply false
}

allprojects {
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = VER_JAVA
    targetCompatibility = VER_JAVA

    compileJava {
        options.encoding 'utf-8'
    }

    configurations {
        parentBom
        compileOnly.extendsFrom(parentBom)
        annotationProcessor.extendsFrom(parentBom)
        implementation.extendsFrom(parentBom)
        testAnnotationProcessor.extendsFrom(parentBom)
        all {
            resolutionStrategy {
                // 对于 SNAPSHOT 版本的依赖包不进行缓存
                cacheChangingModulesFor 0, 'seconds'
            }
        }
    }

    dependencies {
        parentBom platform("org.springframework.boot:spring-boot-dependencies:$VER_SPRING_BOOT")
        parentBom platform("org.springframework.cloud:spring-cloud-dependencies:$VER_SPRING_CLOUD")
    }
    repositories {
        mavenLocal()
        maven { url "$aliyunMavenRepoUrl" }
        mavenCentral()
        jcenter()
    }

    bootRun {
        // Spring boot 插件运行时支持传入参数变量
        systemProperties System.properties
        // 在控制台启动时日志输出总是启用 ansi 输出（能增加输出文字的颜色高亮显示）
        jvmArgs = [ "-Dspring.output.ansi.enabled=ALWAYS" ]
    }

    tasks.withType(Test) {
        testLogging {
            // 单元测试时显示完成的异常错误信息
            exceptionFormat 'full'
            // 单元测试显示标准的输出流
            showStandardStreams = true
        }
    }

    idea {
        module {
            downloadSources = false
            downloadJavadoc = false
        }
    }
    eclipse {
        classpath {
            downloadSources = false
        }
    }
}
